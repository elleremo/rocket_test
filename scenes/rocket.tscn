[gd_scene load_steps=10 format=2]

[ext_resource path="res://sprites/rocket.png" type="Texture" id=1]
[ext_resource path="res://sprites/steam.png" type="Texture" id=2]
[ext_resource path="res://truster2.wav" type="AudioStream" id=3]

[sub_resource type="PhysicsMaterial" id=1]
friction = 0.8
absorbent = true

[sub_resource type="GDScript" id=2]
script/source = "extends RigidBody2D

export(float, 100, 1500) var power = 800.0 
export(float, 100, 200) var speed_torque = 120

export var fuel_volume = 1000.0
export var fuel_speed = 100.0


onready var part_l:CPUParticles2D = $pl
onready var part_r:CPUParticles2D = $pr

onready var left_engine = $left_engine_dot
onready var right_engine = $right_engine_dot
onready var sound_left:AudioStreamPlayer2D = $trust_sound_left
onready var sound_right:AudioStreamPlayer2D = $trust_sound_right

onready var fuel_line = $fuel

#=======================================

 

#=======================================


var ghost = {
	pos = []
	
}

var fuel

func fuel_change():
	if fuel_volume <= 0:
		print(\"fuel is 0\")
		return
#	pass
	var fuel_bot = fuel_line.get_point_position(0)
	
	var k = fuel_volume / fuel.vmax # кэфициент уменьшения топлива
	var new_length = k * fuel.lmax
	
	fuel_line.set_point_position(1, fuel_bot + new_length)
#
#	print(fuel_bot - new_length)
#	print( fuel_speed)
#	print( k)

func _ready():
	# Кэшируем скорость истечения топлива, мощность и поворотливость
	fuel_speed = fuel_speed/100 
	power = power
	
	# Кэшируем начальные показатели топлива
	fuel = { 
		vmax = fuel_volume,
		lmax = fuel_line.get_point_position(1) - fuel_line.get_point_position(0)
	}
	
	var par = get_parent();
#	print( par.gl)
#	print( par.g)

	pass # Replace with function body.


func get_input():
	var right = Input.is_key_pressed(KEY_D)
	var left = Input.is_key_pressed(KEY_A)
#	var jump = Input.is_key_pressed(KEY_SPACE)
	
	part_r.emitting = false
	part_l.emitting = false
	applied_force = Vector2(0,0)
	
	#Выключаем двигатель если ничто не нажато
 
	#Выходим из обработки нажатий если топливо == 0	
	if fuel_volume < 0:
		return

	if right :
#		print('right')
		part_r.emitting = true
		apply_torque_impulse(-speed_torque)
		applied_force =  Vector2(0, -power).rotated(rotation)
		
		fuel_volume -= fuel_speed

		
	if left:
#		print('left')
		part_l.emitting = true
		apply_torque_impulse(speed_torque)
		applied_force =  Vector2(0, -power).rotated(rotation) 
		
		fuel_volume -= fuel_speed

	if right and left:
		applied_force =  Vector2(0, -power*1.4).rotated(rotation)

func sound():
	var l_rel = Input.is_action_just_released(\"left\")
	var r_rel = Input.is_action_just_released(\"right\")
	
	var l_press = Input.is_action_just_pressed(\"left\")
	var r_press= Input.is_action_just_pressed(\"right\")
	
	if l_press:
		sound_left.playing = true
	if r_press:
		sound_right.playing = true
	
	if l_rel:
		sound_left.playing = false
	if r_rel:
		sound_right.playing = false

func get_input_force():
	var right = Input.is_key_pressed(KEY_D)
	var left = Input.is_key_pressed(KEY_A)
	var jump = Input.is_key_pressed(KEY_SPACE)
	
	
	
	
	part_r.emitting = false
	part_l.emitting = false

	if fuel_volume < 0:
		return
	
	if left:
#		sound.playing = true
		
		part_l.emitting = true
		var lp = left_engine.global_position - global_position
		var imp =  (Vector2.UP*12.0).rotated(rotation)
		fuel_volume -= fuel_speed
		apply_impulse (lp, imp)
	
	if right:
		part_r.emitting = true
		var rp = right_engine.global_position - global_position
		var imp =  (Vector2.UP*12.0).rotated(rotation)
		fuel_volume -= fuel_speed
		apply_impulse (rp, imp)
		

		
func on_floor():
	
	pass


func _process(_delta):
	sound()
	fuel_change()
	
	
func _physics_process(_delta):
#	get_input()
#	on_floor()
	get_input_force()
	ghost.pos.append(position)
#	print (ghost.pos)
#	on_floor()
		


"

[sub_resource type="Gradient" id=3]
offsets = PoolRealArray( 0, 0.912162, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0.300781, 0.300781, 0.300781, 0.458824, 0, 0, 0, 0 )

[sub_resource type="Gradient" id=4]
colors = PoolColorArray( 0.0705882, 0.333333, 0.705882, 0.784314, 0, 0.647059, 0.996078, 0.784314 )

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 11.6507, 43.0349 )

[sub_resource type="CapsuleShape2D" id=6]
radius = 13.9072
height = 0.0

[node name="rocket" type="RigidBody2D"]
physics_material_override = SubResource( 1 )
gravity_scale = 3.0
contacts_reported = 39
contact_monitor = true
sleeping = true
script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
visible = false
scale = Vector2( 0.946396, 1 )
texture = ExtResource( 1 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
position = Vector2( -77.9177, 7.26045 )
scale = Vector2( 0.842593, 0.86081 )
build_mode = 1
polygon = PoolVector2Array( 66.7995, 9.59555, 44.527, 58.8177, 74.5948, 12.9364 )
disabled = true

[node name="CollisionPolygon2D2" type="CollisionPolygon2D" parent="."]
position = Vector2( 77.5441, 7.03765 )
scale = Vector2( -0.843, 0.861 )
build_mode = 1
polygon = PoolVector2Array( 66.7995, 9.59555, 44.527, 58.8177, 74.5948, 12.9364 )
disabled = true

[node name="left_engine_dot" type="Position2D" parent="."]
position = Vector2( -11.5642, 46.1856 )

[node name="right_engine_dot" type="Position2D" parent="."]
position = Vector2( 11.7564, 46.1856 )

[node name="pr" type="CPUParticles2D" parent="."]
position = Vector2( 7.85371, 49.5211 )
amount = 832
fract_delta = false
local_coords = false
texture = ExtResource( 2 )
direction = Vector2( 0, 1 )
spread = 65.67
gravity = Vector2( 0, 0 )
initial_velocity = 25.1
initial_velocity_random = 0.25
color_ramp = SubResource( 3 )

[node name="pl" type="CPUParticles2D" parent="."]
position = Vector2( -7.44387, 49.5211 )
amount = 832
fract_delta = false
local_coords = false
texture = ExtResource( 2 )
flag_align_y = true
direction = Vector2( 0, 1 )
spread = 65.67
gravity = Vector2( 0, 0 )
initial_velocity = 25.1
initial_velocity_random = 0.25
color_ramp = SubResource( 3 )

[node name="fuel" type="Line2D" parent="."]
position = Vector2( 0.0960922, -2.78003 )
points = PoolVector2Array( 0, 26.2526, 0, -34.957 )
width = 3.67
default_color = Color( 1, 1, 1, 1 )
gradient = SubResource( 4 )

[node name="steam_style" type="Sprite" parent="."]
position = Vector2( 0.0960922, -0.865978 )
scale = Vector2( 0.27117, 0.286529 )
texture = ExtResource( 1 )

[node name="Collision_body" type="CollisionShape2D" parent="."]
position = Vector2( 0.0936451, 3.49738 )
shape = SubResource( 5 )

[node name="Collision_top" type="CollisionShape2D" parent="."]
position = Vector2( 0.065, -39.302 )
scale = Vector2( 0.849, 0.626 )
shape = SubResource( 6 )

[node name="trust_sound_right" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 3 )
volume_db = -31.524
pitch_scale = 0.62
attenuation = 0.784585

[node name="trust_sound_left" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 3 )
volume_db = -31.524
pitch_scale = 0.6
attenuation = 0.784585
